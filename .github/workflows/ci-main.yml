name: CI (main)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary=:all: numpy
          pip install -r requirements.txt

      - name: Auth to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Export ADC path
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV

      - name: DVC pull (fetch data & model)
        run: dvc pull -v

      - name: Set evaluation env
        run: |
          echo "EVAL_DATA_PATH=data/iris.csv" >> $GITHUB_ENV
          echo "MODEL_PATH=models/model.pkl" >> $GITHUB_ENV
          echo "MIN_EXPECTED_ACCURACY=0.90" >> $GITHUB_ENV

      - name: Run tests (pytest)
        run: pytest -q

      - name: Quick eval â†’ metrics.json
        run: |
          python - <<'PY'
          import os, json, pandas as pd, numpy as np, joblib
          from sklearn.metrics import accuracy_score
          data = os.getenv("EVAL_DATA_PATH", "data/iris.csv")
          modelp = os.getenv("MODEL_PATH", "models/model.pkl")
          if not (os.path.exists(data) and os.path.exists(modelp)):
              with open("metrics.json","w") as f: json.dump({"status":"skipped"}, f)
              raise SystemExit(0)
          df = pd.read_csv(data)
          ycol = "species" if "species" in df.columns else ("target" if "target" in df.columns else None)
          if ycol is None:
              with open("metrics.json","w") as f: json.dump({"status":"no_label"}, f)
              raise SystemExit(0)
          X = df[["sepal_length","sepal_width","petal_length","petal_width"]].to_numpy()
          y = df[ycol].to_numpy()
          if y.dtype.kind in {"U","S","O"}:
              _, y = np.unique(y, return_inverse=True)
          clf = joblib.load(modelp)
          yhat = clf.predict(X)
          acc = accuracy_score(y, yhat)
          with open("metrics.json","w") as f: json.dump({"accuracy":acc}, f)
          PY

      - name: Upload metrics.json artifact
        uses: actions/upload-artifact@v4
        with:
          name: metrics
          path: metrics.json
          if-no-files-found: ignore

      - name: Setup CML
        if: github.event_name == 'pull_request'
        uses: iterative/setup-cml@v2

      - name: CML PR comment
        if: github.event_name == 'pull_request'
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cml comment --publish --pr <<'EOF'
          ## CI (main) Report
          **Branch:** main

          **metrics.json:**
          ```json
          $(cat metrics.json 2>/dev/null || echo '{"status":"missing"}')
          ```
          EOF

