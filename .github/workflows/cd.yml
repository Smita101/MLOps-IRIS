name: CD - Build & Deploy IRIS API

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}           # e.g. us-central1
  GAR_REPO: ${{ secrets.GAR_REPO }}                   # e.g. iris-api
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}               # e.g. iris-api
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}             # e.g. iris-gke
  GKE_LOCATION: ${{ secrets.GKE_LOCATION }}           # e.g. us-central1
  IMAGE_URI: ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPO }}/${{ secrets.IMAGE_NAME }}
  USE_GKE_GCLOUD_AUTH_PLUGIN: "True"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to GCP (Service Account key)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev --quiet

      - name: Build image
        run: docker build -t $IMAGE_URI:${{ github.sha }} .

      - name: Push image
        run: docker push $IMAGE_URI:${{ github.sha }}

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_LOCATION" --project "$PROJECT_ID"

      - name: Apply K8s manifests (service + deployment with patched image)
        run: |
          kubectl apply -f k8s/service.yaml
          sed "s|REPLACE_WITH_IMAGE|$IMAGE_URI:${{ github.sha }}|g" k8s/deployment.yaml | kubectl apply -f -

      - name: Wait for rollout & show service
        run: |
          kubectl rollout status deployment/iris-api --timeout=180s
          kubectl get svc iris-api-svc -o wide
